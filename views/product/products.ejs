<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Products</title>
    <style>
        .flex-container {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;

        }

        .flex-item {
            flex: 0 0 auto;
            margin: 10px;
            width:200px;
            max-width: 200px;
            height: 200px;
            max-height: 200px;
            border:1px solid;
            border-radius: 5px;
            text-align:center;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }
        .flex-item .upper{
            display:flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        .pagination{
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: flex-start;
        }
        .pagination button {
            color: black;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            border-radius: 5px;
            cursor:pointer;
        }
        .pagination button.active {
            color:white;
            background-color: #333333;
        }
        .operationButtonsContainer{
            height:20px;
            text-align: center;
            margin-bottom:5px;
        }
    </style>
</head>
<body>
<%- include('../navmenu.ejs',{pagePath:pagePath}) %>
<div id="productList" class="flex-container">
    Product list is loading...

</div>
<section class="pagination">
    loading...
</section>
<script>
    const texsBurger ={};
    texsBurger.productListRequest = async (pageNumber)=>{
        pageNumber = Number(pageNumber) || 1;
        const productListRequest = await fetch('/products/page/'+pageNumber,{
            method:'GET',
            headers:{
                'Accept':'application/json, text/plain, */*',
                'Authorization' : localStorage.getItem('token')
            }
        })
            .then(result=>{
                return result.json()
            })
            .then(resData=>{
                document.getElementById('productList').innerHTML='';
                resData.products.forEach(oProduct=>{
                    document.getElementById('productList').innerHTML+=`
<div class="flex-item">
<div class="upper">
${oProduct.productName}
<img src="${oProduct.productImage.replace('public','')}" alt="" style="max-height: 150px; max-width: 150px;">
</div>
<div class="operationButtonsContainer">
<button>TEST</button>
</div>
</div>
`;
                })
                let totalProductCount = resData.totalProductCount;
                let itemsPerPage = resData.itemsPerPage;
                let currentPage = resData.currentPage;
                let calculatedPageCount = resData.maxPageNumber
                let pageNo;
                document.querySelector('.pagination').innerHTML='';
                for(pageNo=1; pageNo<=calculatedPageCount; pageNo++){
                    let buttonClass='';
                    if(parseInt(currentPage)===pageNo){
                        buttonClass='class="active"'
                    }
                    document.querySelector('.pagination').innerHTML+=`<button type="button" ${buttonClass} onclick="texsBurger.productListRequest(${pageNo})">${pageNo}</button>`
                }

            })
            .catch(err=>{
                console.log(err)
            })
    }

    window.addEventListener('load', texsBurger.productListRequest);
</script>
</body>
</html>
